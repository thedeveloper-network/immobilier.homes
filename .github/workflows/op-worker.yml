name: Build & Deploy Op-Worker
on:
  push:
    tags:
      - 'worker-*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npx nx build op-worker 
      # - run: tar -cf ./dist/packages/op-worker/node.tar node_modules

      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: dist/packages/op-worker
  server-clean:
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup Server
        uses: appleboy/ssh-action@v0.1.3
        env:
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_USER: ${{ secrets.REDIS_USER }}
          REDIS_PASS: ${{ secrets.REDIS_PASS }}
        with:
          host: ${{secrets.DO_SSH_HOST}} # IP address of the server you wish to ssh into
          key: ${{secrets.DO_SSH_KEY}} # Private or public key of the server
          username: ${{ secrets.DO_SSH_USERNAME }} # User of the server you want to ssh into
          envs: REDIS_HOST,REDIS_PORT,REDIS_USER,REDIS_PASS
          script: |
            npm install -g pm2
            pm2 kill
            rm -rf app
            mkdir app
  deploy:
    runs-on: ubuntu-latest
    needs: [build,server-clean]
    steps:
        - name: Download Build
          uses: actions/download-artifact@v2
          with:
            name: build
            path: .
        - name: Deploy to DO
          uses: appleboy/scp-action@v0.1.4
          with:
            host: ${{ secrets.DO_SSH_HOST }}
            username: ${{ secrets.DO_SSH_USERNAME }}
            key: ${{ secrets.DO_SSH_KEY }}
            source: "./*"
            target: ~/app
  install:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Install Node App
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{secrets.DO_SSH_HOST}} # IP address of the server you wish to ssh into
          key: ${{secrets.DO_SSH_KEY}} # Private or public key of the server
          username: ${{ secrets.DO_SSH_USERNAME }} # User of the server you want to ssh into
          script: |
            cd ~/app
            # tar -xf node.tar node_modules
            # rm -rf node.tar
            pm2 start main.js